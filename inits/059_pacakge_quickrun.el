(leaf quickrun
  :ensure t
  :diminish
  :bind
  ("C-c C-c" . quickrun)
  ("<f5>"    . quickrun)

  :config
  (leaf quickrun-c++17
    :config
    ;; Add C++ command for C++17 and set it default in C++ file.
    (quickrun-add-command "c++17"
      '((:command . "g++")
        (:exec . ("%c -std=c++17 -lstdc++ %o -o %e %s"
                  "%e %a"))
        (:remove . ("%e")))
      :default "c++")
    (quickrun-set-default "c++" "c++17"))

  (leaf quickrun-nodejs
    :config
    (quickrun-add-command "nodejs"
      '((:command . "nodejs")
        (:exec . ("%c %s")))
      :default "nodejs")
    (quickrun-set-default "javascript" "nodejs"))

  (leaf quickrun-kustomize
    :config
    (quickrun-add-command "kustomize"
      '((:command . "kustomize")
        (:exec . ("%c build --enable-alpha-plugins --enable-exec --enable-helm --load-restrictor LoadRestrictionsNone .")))
      :default "yaml")
    (quickrun-set-default "yaml" "kustomize"))

  (defvar quickrun-file-alist
    '(("\\.c\\'"                                  . "c")
      ("\\.\\(cpp\\|cxx\\|C\\|cc\\)\\'"           . "c++")
      ("\\.m\\'"                                  . "objc")
      ("\\.cs\\'"                                 . "c#")
      ("\\.\\(pl\\|pm\\)\\'"                      . "perl")
      ("\\.rb\\'"                                 . "ruby")
      ("\\.py\\'"                                 . "python")
      ("\\.php\\'"                                . "php")
      ("\\.\\(el\\|elisp\\)\\'"                   . "emacs")
      ("\\.\\(lisp\\|lsp\\)\\'"                   . "lisp")
      ("\\.\\(scm\\|scheme\\)\\'"                 . "scheme")
      ("\\.js\\'"                                 . "javascript")
      ("\\.clj\\'"                                . "clojure")
      ("\\.erl\\'"                                . "erlang")
      ("\\.ml\\'"                                 . "ocaml")
      ("\\.\\(fsx?\\|fsscript\\)\\'"              . "fsharp")
      ("\\.go\\'"                                 . "go")
      ("\\.io\\'"                                 . "io")
      ("\\.lua\\'"                                . "lua")
      ("\\.hs\\'"                                 . "haskell")
      ("\\.java\\'"                               . "java")
      ("\\.d\\'"                                  . "d")
      ("\\.\\(f\\|for\\|f90\\|f95\\)\\'"          . "fortran")
      ("\\.\\(md\\|markdown\\|mdown\\|mkdn\\)\\'" . "markdown")
      ("\\.coffee\\'"                             . "coffee")
      ("\\.jsx\\'"                                . "jsx")
      ("\\.ts\\'"                                 . "typescript")
      ("\\.scala\\'"                              . "scala")
      ("\\.groovy\\'"                             . "groovy")
      ("\\.haml\\'"                               . "haml")
      ("\\.sass\\'"                               . "sass")
      ("\\.less\\'"                               . "less")
      ("\\.\\(sh\\|bash\\|zsh\\|csh\\|csh\\)\\'"  . "shellscript")
      ("\\.awk\\'"                                . "awk")
      ("\\.rs\\'"                                 . "rust")
      ("\\.dart\\'"                               . "dart/checked")
      ("\\.exs?\\'"                               . "elixir")
      ("\\.tcl\\'"                                . "tcl")
      ("\\.swift\\'"                              . "swift")
      ("\\.dats\\'"                               . "ats")
      ("\\.\\(r\\|R\\)\\'"                        . "r"))
    "Alist of (file-regexp . key)")

  (defvar quickrun/major-mode-alist
    '((c-mode                              . "c")
      (c++-mode                            . "c++")
      (objc-mode                           . "objc")
      (csharp-mode                         . "c#")
      ((perl-mode cperl-mode)              . "perl")
      (ruby-mode                           . "ruby")
      (python-mode                         . "python")
      (php-mode                            . "php")
      (emacs-lisp-mode                     . "emacs")
      (lisp-mode                           . "lisp")
      (scheme-mode                         . "scheme")
      ((javascript-mode js-mode js2-mode)  . "javascript")
      (clojure-mode                        . "clojure")
      (erlang-mode                         . "erlang")
      ((ocaml-mode tuareg-mode)            . "ocaml")
      (fsharp-mode                         . "fsharp")
      (go-mode                             . "go")
      (io-mode                             . "io")
      (lua-mode                            . "lua")
      (haskell-mode                        . "haskell")
      (java-mode                           . "java")
      (d-mode                              . "d")
      (fortran-mode                        . "fortran")
      (markdown-mode                       . "markdown")
      (coffee-mode                         . "coffee")
      (jsx-mode                            . "jsx")
      (typescript-mode                     . "typescript")
      (scala-mode                          . "scala")
      (groove-mode                         . "groovy")
      (haml-mode                           . "haml")
      (sass-mode                           . "sass")
      ((less-mode less-css-mode)           . "less")
      (sh-mode                             . "shellscript")
      (awk-mode                            . "awk")
      (rust-mode                           . "rust")
      (dart-mode                           . "dart/checked")
      (elixir-mode                         . "elixir")
      (tcl-mode                            . "tcl")
      (swift-mode                          . "swift")
      (ats-mode                            . "ats")
      (ess-mode                            . "r"))
    "Alist of major-mode and langkey")
  )
